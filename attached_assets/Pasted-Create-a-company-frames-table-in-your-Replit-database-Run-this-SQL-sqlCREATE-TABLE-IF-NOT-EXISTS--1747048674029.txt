Create a company_frames table in your Replit database. Run this SQL:

sqlCREATE TABLE IF NOT EXISTS company_frames (
  id SERIAL PRIMARY KEY,
  company_id VARCHAR(255) NOT NULL,
  frame_key VARCHAR(100) NOT NULL,
  template_key VARCHAR(100) NOT NULL,
  image_url TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP DEFAULT NOW(),
  UNIQUE(company_id, frame_key, template_key)
);

Update your getPhotoUrl function in lib/photo.ts to check for company-specific frames:

typescriptexport function getPhotoUrl(company: Company, frameName: string, templateKey: string): string {
  // First try to get from company_frames database table
  if (company?.company_frames && company.company_frames[frameName]) {
    return company.company_frames[frameName];
  }
  
  // Then try template frames
  if (company?.template_frames && company.template_frames[frameName]) {
    return company.template_frames[frameName];
  }
  
  // Fall back to default images
  const defaultImages = {
    'hero_img': 'https://images.unsplash.com/photo-1581146783519-13333b79e6c6?ixlib=rb-4.0.3&auto=format&fit=crop&w=1170&q=80',
    'about_img': 'https://images.unsplash.com/photo-1621905251189-08b45d6a269e?ixlib=rb-4.0.3&auto=format&fit=crop&w=1169&q=80',
    // other defaults...
  };
  
  if (defaultImages[frameName]) {
    return defaultImages[frameName];
  }
  
  return `/stock/${templateKey}/${frameName}.svg`;
}

Update your getStaticProps in pages/t/[template_key]/[slug].tsx to fetch frames:

typescript// Inside getStaticProps
// Get company-specific frames
const companyFramesResult = await query(
  'SELECT frame_key, image_url FROM company_frames WHERE company_id = $1 AND template_key = $2',
  [slug, template_key]
);

// Get template frames
const templateFramesResult = await query(
  'SELECT frame_key, image_url FROM template_frames WHERE template_key = $1',
  [template_key]
);

// Convert to objects for easier lookup
const company_frames = {};
companyFramesResult.rows.forEach((frame) => {
  company_frames[frame.frame_key] = frame.image_url;
});

const template_frames = {};
templateFramesResult.rows.forEach((frame) => {
  template_frames[frame.frame_key] = frame.image_url;
});

// Add frames to company object
company.company_frames = company_frames;
company.template_frames = template_frames;

Create a simple API endpoint at pages/api/company-frames.ts to manage frames.