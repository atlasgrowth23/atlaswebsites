You are my Portal‑Demo refactor assistant.  Execute EVERY step:

────────────────────────────────────────
A.  Move & rename routes
────────────────────────────────────────
1.  git mv pages/[slug]/hvacportal pages/[company]/portal
2.  Inside new folder rename login.tsx → demo.tsx
    • Replace the form with:
      useEffect(() => {
        fetch('/api/auth/demo', {method:'POST',body:JSON.stringify({company:companySlug})})
          .then(r => r.ok && router.replace(`/${companySlug}/portal`));
      }, []);
    • Show spinner + text “Loading demo…”

────────────────────────────────────────
B.  Create /api/auth/demo
────────────────────────────────────────
3.  pages/api/auth/demo.ts:
      import db from "@/lib/db";
      import { sign } from "jsonwebtoken";
      export default async (req,res)=>{
        if(req.method!=='POST') return res.status(405).end();
        const { company } = JSON.parse(req.body||'{}');
        const row = await db.companies.findFirst({ where:{ slug:company }});
        if(!row) return res.status(404).end();
        if(row.plan!=='prospect'){
          return res.status(403).json({ error:"demo disabled" });
        }
        const token = sign({ cid:row.id, role:'owner' }, process.env.JWT_SECRET, { expiresIn:"30d" });
        res.setHeader('Set-Cookie',`jwt=${token}; Path=/; HttpOnly; SameSite=Lax`);
        res.json({ok:true});
      }

────────────────────────────────────────
C.  Middleware to protect portal
────────────────────────────────────────
4.  middleware.ts (edge):
      import { NextResponse } from 'next/server';
      export function middleware(req){
        const { pathname } = req.nextUrl;
        if(!pathname.match(/^\/[^\/]+\/portal/)) return;
        const jwt = req.cookies.get('jwt');
        if(!jwt) return NextResponse.redirect(new URL('/', req.url));
      }

────────────────────────────────────────
D.  DB tweak
────────────────────────────────────────
5.  ALTER TABLE companies ADD COLUMN IF NOT EXISTS plan text DEFAULT 'prospect';

────────────────────────────────────────
E.  Replace old include
────────────────────────────────────────
6.  Search repo for "/hvacportal/login" links → replace with
      `/${slug}/portal/demo`

────────────────────────────────────────
F.  Quick smoke test
────────────────────────────────────────
7.  npm run dev
    • /atlas-hvac/portal/demo  => auto‑redirects into dashboard
    • Change atlas-hvac plan to 'paid' in DB → same URL now shows 403 JSON

────────────────────────────────────────”**




1 Tabs & features (everything visible on day 1)
Tab
What they can do in 10 seconds
Why it beats ServiceTitan’s UX
Messages
• Read live chat/SMS feed (new threads jump to top)
• Convert any bubble to a Contact with one click
• “Create Job” button copies the message into job notes
ServiceTitan forces a page change—yours is Slack‑like and keyboard‑driven.
Contacts
• Search by name/phone
• Click ➜ side‑drawer with equipment list & last 3 jobs
• “+ Equipment” inline drawer (brand/model only)
Drawer never navigates away, so dispatch keeps context.
Schedule
• Calendar shows one column for solo owner, or drag‑&‑drop columns per tech for multi‑tech
• Colour logic: brand‑tint for normal, red for emergency, amber in‑progress, green done
• ICS feed link next to each tech’s name
ServiceTitan’s calendar is dense; yours has big touch targets, icon‑based service types, and fades old jobs to 50 % opacity.
Settings
• Business info & logo
• Team invite (only if multi‑tech flag)
• Notification toggles (email on new lead)
• Chat‑widget buttons editor (change labels/order)
• Twilio + QuickBooks sections hidden until you turn those on



3 Little touches that make it “ServiceTitan—but nicer”
Feature
How yours is better
Brand‑tint everywhere
Primary colour drives buttons, links, even chart bars; ST uses the same corporate teal for everyone.
Adaptive dark mode
If user’s OS is dark, dashboard switches; ST charges extra for “pro theme.”
One‑click ICS
No OAuth rigmarole; ST requires the mobile app or a connector.
Inline equipment capture
Add brand/model without navigating to a monster form.
Fast app‑like feel
PWA install prompt gives icon on home‑screen in one tap.
Real‑time toast & socket updates
No page refresh to see new leads; ST polls every 30 s.
Opacity fade for completed jobs
Keeps the calendar readable by Friday; ST shows same saturation all week.


