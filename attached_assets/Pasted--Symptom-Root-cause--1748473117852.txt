| Symptom                                                          | Root cause                                                                                                                                                                     | Quick fix                                                                                                                                                              |
| ---------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| **Image element renders but with the “broken” icon**             | Next.js blocks remote images that aren’t explicitly allowed. If you look in DevTools, the request 404s with a message like *“next-image-remote-pattern: host not configured.”* | In **`next.config.js`** add a catch-all rule:<br>`images: { remotePatterns: [{ protocol: 'https', hostname: '**', pathname: '/**' }] }`<br>Re-run `next build` → push. |
| **Still broken even after remotePatterns**                       | The URL in the database points to an S3 (or other) bucket that is **private** or uses a presigned URL that has already expired.                                                | - Ensure your `putObject` sets the object ACL to `public-read` or uses CloudFront.<br>- Store the **public CDN URL**, not the S3 internal one.                         |
| **Sharp code runs, but logoUrl in DB is still the original URL** | You fetch the remote image, process it with Sharp, upload to storage—but then forget to **replace** the original URL with the CDN URL before saving.                           | After `processLogo` returns its JSON, assign `body.logoUrl = result['1x']` (or the object you want) before the DB update.                                              |
| **Image loads but looks fuzzy on Retina**                        | You emitted only a 1× variant and didn’t set `srcSet`.                                                                                                                         | In the component:<br>``tsx<br><Image src={logo['1x']} srcSet={`${logo['1x']} 1x, ${logo['2x']} 2x`} … />``                                                             |
